/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: shadowowy (https://sketchfab.com/shadowowy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/old-tv-7cef86bade2b447d841c333bcab9287c
Title: Old TV
*/

import React, { useEffect, useRef, useState } from 'react'
import { Float, useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export default function FloatingTVModel(props: any) {
    const { scene } = useGLTF('/old_tv.glb')
    const [hover, setHover] = useState(false);

const setEmissive = (object: THREE.Object3D, highlight: boolean) => {
    object.traverse((child) => {
      if (child instanceof THREE.Mesh && child.material && 'emissive' in child.material) {
        if (highlight) {
          child.material.emissive = new THREE.Color('#67E8F9')
          child.material.emissiveIntensity = 0.3
        } else {
          child.material.emissive = new THREE.Color('black')
          child.material.emissiveIntensity = 0
        }
      }
    })
  }

  // Update the cursor and model glow on hover change
  useEffect(() => {
    document.body.style.cursor = hover ? 'pointer' : 'auto'
    setEmissive(scene, hover)
  }, [hover, scene])
    // Optionally scale and adjust as needed
    scene.scale.set(0.015, 0.015, 0.015)

    const position = [-2,-5,-20];
    
  return (
    <Float floatIntensity={0.1} speed={0.1} floatingRange={[1, 2]}>
        <ambientLight intensity={2} />
        <directionalLight intensity={3} position={[10, 10, 5]} />
        <group>
          <primitive 
            object={scene} 
            position={position} 
            onPointerOver={() => setHover(true)}
            onPointerOut={() => setHover(false)}
            onClick={() => window.open("https://www.youtube.com/@ThisIsDafna")}
          />
        </group>
    </Float>
  )
}

useGLTF.preload('/old_tv.glb')

